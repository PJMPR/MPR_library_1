package library.dao.repos;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import library.domain.ReservationItem;

public class ReservationItemRepository extends RepositoryBase<ReservationItem> 
{
	
	public ReservationItemRepository(Connection connection) 
	{
		super(connection);
	}
	
	@Override
	protected String getUpdateQuerySql() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	protected String getInsertQuerySql() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	protected String getTableName() {
		return "reservation_item";
	}

	@Override
	protected String createTableStatementSql() {
		return "CREATE TABLE reservation_item("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "reservation_id bigint,"
				+ "book_id bigint"
				+ ")";
	}
	
	public int lastId() 
	{
		try {
			ResultSet rs = lastId.executeQuery();
			while(rs.next()){
			return rs.getInt(1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			}
		return 0;
	}
	
	public int count() 
	{
		try {
			ResultSet rs = count.executeQuery();
			while(rs.next()){
			return rs.getInt(1);
			}
		} catch (SQLException e) {
		e.printStackTrace();
		}
			return 0;
	}
	
	public List<ReservationItem> getPage(int offset, int limit) 
	{
		List<ReservationItem> result = new ArrayList<ReservationItem>();
		try {
			selectPage.setInt(1, offset);
			selectPage.setInt(1, limit);
			ResultSet rs = selectPage.executeQuery();
			while(rs.next()){
			ReservationItem p = new ReservationItem();
			p.setId(rs.getInt("id"));
			p.setReservationId(rs.getInt("reservation_id"));
			p.setBookId(rs.getInt("book_id"));
			result.add(p);
		}
		} catch (SQLException e) {
		e.printStackTrace();
		}
			return result;
	}
	
	public void add(ReservationItem reservationItem ) 
	{
		
		try {
			insert.setInt(1, reservationItem.getReservation().getId());
			insert.setInt(2, reservationItem.getBook().getId());
			insert.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} 
	}

	public void update(ReservationItem reservationItem) 
	{

		try {

			update.setInt(1, reservationItem.getReservationId());
			update.setInt(2, reservationItem.getBookId());
			update.setInt(3, reservationItem.getId());
			update.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
}
